//---------------------------------------------------ANIDACIONES OBJETOS Y PROBAR PARÃ‰NTESIS EN EXPRESIONES----------------------------------------------------------
let a = asd["masd"].dasds["asda"]["casdada"].asda.dsads;
hola = (((((67)))));
//----------------------------------------------------------Probando IF----------------------------------------------------------------------------------------------
if (3 == 9 || !B && 90 == HOLA && my_house["price"] == 9){
var1 = 9;
}
if (gte(var1.nested["prop"], var2)){
 var2 = 'a';}else{}
 if (gte(var1.nested["prop"], var2)){
 var2 = 'a';}else{
 while(!(b<c ) == 9 || !B && 90 == HOLA && my_house["price"] == 9+ (((((((!9 && 8 > ((9))* punto - -9 +8)))))))) {
a = tr;
}
}
//----------------------------------------------------------Probando WHILE-------------------------------------------------------------------------------------------
while(!(b<c ) == 9 || !B && 90 == HOLA && my_house["price"] == 9+ (((((((!9 && 8 > ((9))* punto - -9 +8)))))))) {
a = tr;
}
//----------------------------------------------------------Probando RETURN----------------------------------------------------------------------------------------
function nombre(par_1: int, par_2: character, par_3: boolean, par_4: float): float{
    return (((par_1 + par_2 - par_4) <= 0) == par_3);
}
function nombre(par_1: int, par_2: character, par_3: boolean, par_4: float): float{
    return 12;
}

function nombre(par_1: int, par_2: character, par_3: boolean, par_4: float): float{
    a = 12;
    while (a <= 23){
        a = a + 1;
    }
    return a;
}

function get_point_after(point: Point ): Point {
    let b= mod(a,b);
    return { x: point.x, y: -point.y + 10 , z: {hols:9, }};       //Devolver objetos
}
while(null){
    a = 2;
}
if (null){
    a = 2;
}

let a = 9 + +++++++++++++ 8;
let b = 8 + -+-+-+-+-+-+-+-+-+ 7;
let circulo = !!!!!!!!!!!!!!!!!!tr - +++++++++-----+++8 && !4;
